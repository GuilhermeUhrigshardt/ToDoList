// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Repository.DatabaseContext;

#nullable disable

namespace ToDoList.Repository.Migrations
{
    [DbContext(typeof(ToDoDatabaseContext))]
    [Migration("20241029200620_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Domain.Entities.Checklist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdChecklist");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Checklists");
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdGroup");

                    b.Property<DateTime?>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6461cb4-e9af-4a54-b669-4a55cb3fcb5f"),
                            Inserted = new DateTime(2024, 10, 29, 17, 6, 19, 845, DateTimeKind.Local).AddTicks(6060),
                            Name = "Shopping"
                        },
                        new
                        {
                            Id = new Guid("9c97e004-9bc1-4922-b00a-194ab26bf6dc"),
                            Inserted = new DateTime(2024, 10, 29, 17, 6, 19, 845, DateTimeKind.Local).AddTicks(6065),
                            Name = "Work"
                        },
                        new
                        {
                            Id = new Guid("3ac8ebfa-efb0-4802-84b7-d66eeb06b0dc"),
                            Inserted = new DateTime(2024, 10, 29, 17, 6, 19, 845, DateTimeKind.Local).AddTicks(6068),
                            Name = "School"
                        },
                        new
                        {
                            Id = new Guid("6d88fd70-53d7-4594-b6ab-490c158b7114"),
                            Inserted = new DateTime(2024, 10, 29, 17, 6, 19, 845, DateTimeKind.Local).AddTicks(6071),
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdItem");

                    b.Property<Guid>("ChecklistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Important")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Remind")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Checklist", b =>
                {
                    b.HasOne("ToDoList.Domain.Entities.Group", "Group")
                        .WithMany("Checklists")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Item", b =>
                {
                    b.HasOne("ToDoList.Domain.Entities.Checklist", "Checklist")
                        .WithMany("Items")
                        .HasForeignKey("ChecklistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Checklist");
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Checklist", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ToDoList.Domain.Entities.Group", b =>
                {
                    b.Navigation("Checklists");
                });
#pragma warning restore 612, 618
        }
    }
}
